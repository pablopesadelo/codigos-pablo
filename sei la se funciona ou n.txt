#include <LiquidCrystal_I2C.h>
#include <Arduino.h>
 
LiquidCrystal_I2C lcd(0x27,20,4);

byte quadradoVazio[] = {
  B11111,
  B10001,
  B10001,
  B10001,
  B10001,
  B10001,
  B10001,
  B11111
};
 
#define canalA 18 //clk
#define canalB 23 //dt
#define botao 15
#define led1 2
#define led2 4
#define led3 12
#define led4 14

void menuPrincipal (void);
void menuLed1 (void);
void menuLed2 (void);  
void menuLed3 (void);
void menuLed4 (void);
void girandoH (void);
void girandoAH (void);

void setup()
{
  estadoAnteriorCLK = digitalRead(canalA);
}

void loop()
{

  //variaveis e booleanas

//varaiveis
int contadorMenu = 0;
int estadoAtualCLK;
int estadoAnteriorCLK;
int estadoA;
int ultimoestadoA;
int contadorMenuBotao = 0;
int brilhoLed1 = 0;
int brilhoLed2 = 0;
int brilhoLed3 = 0;
int brilhoLed4 = 0;

//booleanas
bool menu = true;
bool girandoH = false;
bool girandoAH = false;
bool modoAlteracaoLed1 = false;
bool modoAlteracaoLed2 = false;
bool modoAlteracaoLed3 = false;
bool modoAlteracaoLed4 = false;
bool botaoApertado = false;

  //fim das variaveis e booleanas

  //controle botao
  static bool estadoAnteriorBotao = 0;
  bool estadoAtualBotao = digitalRead(botao);
    
  if (estadoAtualBotao == 1 && !estadoAnteriorBotao)
  {
  !botaoApertado;
  }
 delay(50);
 estadoAnteriorBotao = estadoAtualBotao;
  //fim controle botao

  //controle encoder
  estadoAtualCLK = digitalRead(canalA);

  if (estadoAtualCLK != estadoAnteriorCLK)
  {
    estadoA = digitalRead(canalB);
    if (estadoA != ultimoestadoA)
    {
      if (estadoA == LOW)
      {
        girandoH();
      }
      else
      {
        girandoA()H;
      }
    }
    ultimoestadoA = estadoA;
  }
  switch (contadorMenu)
  {
   case (2):
     lcd.setCursor(0, 1);
     lcd.print(">");
     break;
   case (3): 
     lcd.setCursor(0, 2);
     lcd.print(">");
     break;
   case (4):
     lcd.setCursor(0, 3);
     lcd.print(">");
     break;
   default:
     lcd.setCursor(0, 0);
     lcd.print(">");
  }
 
  if (botaoApertado)
  {
    !menu;
  }

  if (menu)
  {
    menuPrincipal();
  }
 
}

void menuPrincipal ()
{
  lcd.clear();
  lcd.setCursor(1,0);
  lcd.print("Led 1");
  lcd.setCursor(1,1);
  lcd.print("Led 2");
  lcd.setCursor(1,2);
  lcd.print("Led 3");
  lcd.setCursor(1,3);
  lcd.print("Led 4");
}

void menuLed1 (void)
{
  lcd.clear();
  lcd.setCursor(7,0);
  lcd.print("Led 1");
  lcd.setCursor(5,3);
  lcd.print("Brilho: ");
  lcd.print(brilhoLed1);
}

void menuLed2 (void)
{
  lcd.clear();
  lcd.setCursor(7,0);
  lcd.print("Led 2");
  lcd.setCursor(5,3);
  lcd.print("Brilho: ");
  lcd.print(brilhoLed2);
}

void menuLed3 (void)
{
  lcd.clear();
  lcd.setCursor(7,0);
  lcd.print("Led 3");
  lcd.setCursor(5,3);
  lcd.print("Brilho: ");
  lcd.print(brilhoLed3);
}

void menuLed4 (void)
{
  lcd.clear();
  lcd.setCursor(7,0);
  lcd.print("Led 4");
  lcd.setCursor(5,3);
  lcd.print("Brilho: ");
  lcd.print(brilhoLed4);
}

void girandoH (void)
{
  switch (girandoH = true;)
  {
  case (modoAlteracaoLed1):
    intBrilhoLed1++;
    break;
  case (modoAlteracaoLed2):
    intBrilhoLed2++;
    break;
  case (modoAlteracaoLed3):
    intBrilhoLed3++;
    break;
  case (modoAlteracaoLed4):
    intBrilhoLed4++;
    break;
  default: (menuPrincipal)
  contadorMenu++;
    if (contadorMenu > 4)
    {
      contadorMenu = 4;
    }
  }
}

void girandoAH (void)
{
  switch (girandoAH = true;)
  {
  case (modoAlteracaoLed1):
    intBrilhoLed1--;
    break;
  case (modoAlteracaoLed2):
    intBrilhoLed2--;
    break;
  case (modoAlteracaoLed3):
    intBrilhoLed3--;
    break;
  case (modoAlteracaoLed4):
    intBrilhoLed4--;
    break;
  default: (menuPrincipal)
  contadorMenu++;
    if (contadorMenu < 0)
    {
      contadorMenu = 0;
    }
  }
}

// https://www.youtube.com/watch?v=BDvRUnyHtlo video q eu tava vendo kkkk
// https://forum.arduino.cc/t/rotary-encoder-schematic-and-example-code/546111
// https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/switch
// https://www.youtube.com/watch?v=_-_Q7BhXLiw
//